Objetos: Los objetos son parecidos a los arrays explicados anteriormente en el sentido que son contenedores de varios tipos de datos.
Las diferencias radican, en que los objetos no poseen subíndices que apuntan hacia los diferentes tipos de datos; sino que contienen nombres similares a los de una variable. Estos nombres que señalan hacia el lugar donde se albergan los datos, son llamados Claves. De cierta manera, se podría decir que los arrays también poseen claves, sólo que en estas son siempre numéricas, mientras que en los objetos estas claves pueden llevar cualquier tipo de nombre.
Además de la diferencia antes mencionada, la forma en la que se declara un objeto y se accede a las Claves, es muy diferente de las de un Array. Además, la funcionalidad que permite un objeto a la hora de operar con él cambia drásticamente así como también la forma de declararlos y llamarlos.

Propiedades: Se llaman propiedades de un objeto al par Clave y su valor. La forma de llamar a una propiedad es: Objeto.Clave siendo "objeto" el nombre que le hayamos dado y "clave" el nombre que hace referencia al valor. Al llamar a la propiedad de esta manera, nos arrojará el valor que hayamos albergado.

Método: Los métodos son funciones iguales a las explicadas en un ejercicio anterior. La diferencia es que los métodos son funciones que se encuentran por dentro de un objeto; siendo entonces el método un valor dentro de un objeto que posee las características de una función. La forma de llamarlos es igual que lo hacíamos con una propiedad, teniendo en cuenta que se debe usar la nomenclatura de una función usando los paréntesis al final de la misma; teniendo en cuenta que también podemos pasarle arguentos entre estos paréntesis si el método lo permite.

Bucle for...in: El bucle "for in" es un tipo de bucle especial para objetos. Debido a que los pares clave-valor que se encuentran dentro de un objeto pueden no ser sólamente numéricos, si queremos hacer una iteración sobre todos los pares clave-valor no nos servira hacer un bucle que comience con un número y que este vaya cambiando con cada iteración. De esta manera, el bucle "for in" nos permite hacer una operación sobre todos los pares clave-valor que se encuentren dentro de un objeto independientemente de los nombres que le hayamos dado.

Notación de puntos vs notación de corchetes: Anteriormente fue explicado que para llamar a una propiedad se necesitaba llamar al par clave-valor con la declaración "objeto.clave". En realidad, esta no es la única manera y también puede hacerse usando una notación similar a la que se usa con arrays, siendo esta "objeto[clave]".
La diferencia radica, en que la notación de puntos solo es posible de usar si la propiedad ya existe, mientras que la notación de corchetes nos permite que la clave este referenciada en una variable y agregarla a las propiedades de un objeto ya existente.
Nota: Si queremos llamar a una propiedad ya existente con la notación de corchetes, será necesario usar una cadena (string) en el lugar de la clave.

